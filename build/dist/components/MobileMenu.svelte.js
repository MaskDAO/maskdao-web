import './MobileMenu.svelte.css.proxy.js';
/* src/components/MobileMenu.svelte generated by Svelte v3.32.2 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	space
} from "../../_snowpack/pkg/svelte/internal.js";

import { createEventDispatcher } from "../../_snowpack/pkg/svelte.js";

function create_fragment(ctx) {
	let div2;
	let div0;
	let t0;
	let div1;
	let mounted;
	let dispose;

	return {
		c() {
			div2 = element("div");
			div0 = element("div");
			t0 = space();
			div1 = element("div");

			div1.innerHTML = `<a class="nav-item svelte-18lt9wl" href="/">Home</a> 
    <a class="nav-item svelte-18lt9wl" href="https://discord.gg/8c73c3zR" target="_blank">Forum</a> 
    <a href="https://docs.google.com/document/d/1G8Mzg5rSTQi27hHbNR4T2fJtvmO9MhhKSad7tjJWIW8/edit" target="_blank" class="nav-item svelte-18lt9wl">About</a>`;

			attr(div0, "class", "backdrop svelte-18lt9wl");
			attr(div1, "class", "mobile-menu svelte-18lt9wl");
			attr(div2, "class", "mobile-menu-wrapper svelte-18lt9wl");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div0);
			append(div2, t0);
			append(div2, div1);

			if (!mounted) {
				dispose = listen(div0, "click", /*click_handler*/ ctx[2]);
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div2);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { navOpen = false } = $$props;
	const dispatch = createEventDispatcher();

	function showNav(openOrNot) {
		dispatch("message", { open: openOrNot });
	}

	const click_handler = () => showNav(false);

	$$self.$$set = $$props => {
		if ("navOpen" in $$props) $$invalidate(1, navOpen = $$props.navOpen);
	};

	return [showNav, navOpen, click_handler];
}

class MobileMenu extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { navOpen: 1 });
	}
}

export default MobileMenu;