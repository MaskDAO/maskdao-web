import './Home.svelte.css.proxy.js';
/* src/pages/Home.svelte generated by Svelte v3.32.2 */
import {
	SvelteComponent,
	append,
	attr,
	check_outros,
	create_component,
	destroy_component,
	detach,
	element,
	group_outros,
	init,
	insert,
	mount_component,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "../../_snowpack/pkg/svelte/internal.js";

import Nav from "../components/Nav.svelte.js";
import MobileMenu from "../components/MobileMenu.svelte.js";
import Footer from "../components/Footer.svelte.js";

function create_if_block(ctx) {
	let mobilemenu;
	let current;
	mobilemenu = new MobileMenu({ props: { open: /*open*/ ctx[0] } });
	mobilemenu.$on("message", /*showNav*/ ctx[1]);

	return {
		c() {
			create_component(mobilemenu.$$.fragment);
		},
		m(target, anchor) {
			mount_component(mobilemenu, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const mobilemenu_changes = {};
			if (dirty & /*open*/ 1) mobilemenu_changes.open = /*open*/ ctx[0];
			mobilemenu.$set(mobilemenu_changes);
		},
		i(local) {
			if (current) return;
			transition_in(mobilemenu.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(mobilemenu.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(mobilemenu, detaching);
		}
	};
}

function create_fragment(ctx) {
	let div3;
	let nav;
	let t0;
	let t1;
	let div2;
	let t10;
	let footer;
	let current;
	nav = new Nav({ props: { open: /*open*/ ctx[0] } });
	nav.$on("message", /*showNav*/ ctx[1]);
	let if_block = /*open*/ ctx[0] && create_if_block(ctx);
	footer = new Footer({});

	return {
		c() {
			div3 = element("div");
			create_component(nav.$$.fragment);
			t0 = space();
			if (if_block) if_block.c();
			t1 = space();
			div2 = element("div");

			div2.innerHTML = `<section class="svelte-1vaqvgu"><div class="hero-icon svelte-1vaqvgu"><img src="/maskdao-logo-stub.png" class="svelte-1vaqvgu"/></div> 
      <div class="coming-soon svelte-1vaqvgu">Coming Soon</div></section> 
    <section class="svelte-1vaqvgu"><h1>Intro</h1> 
      <p>MaskDAO is a community led Decentralized Autonomous Organization (DAO) built off of Hashmask NFTs. The DAO focuses on building an artist marketplace, new NFT release curation, and community tools.</p> 
      <p>In order to launch MaskDAO, there will be a MSK governance token distribution event. Distribution will be rewarded to Hashmask owners and can be earned through liquidity mining programs.</p></section>`;

			t10 = space();
			create_component(footer.$$.fragment);
			attr(div2, "class", "main svelte-1vaqvgu");
		},
		m(target, anchor) {
			insert(target, div3, anchor);
			mount_component(nav, div3, null);
			append(div3, t0);
			if (if_block) if_block.m(div3, null);
			append(div3, t1);
			append(div3, div2);
			append(div3, t10);
			mount_component(footer, div3, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const nav_changes = {};
			if (dirty & /*open*/ 1) nav_changes.open = /*open*/ ctx[0];
			nav.$set(nav_changes);

			if (/*open*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*open*/ 1) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div3, t1);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i(local) {
			if (current) return;
			transition_in(nav.$$.fragment, local);
			transition_in(if_block);
			transition_in(footer.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(nav.$$.fragment, local);
			transition_out(if_block);
			transition_out(footer.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div3);
			destroy_component(nav);
			if (if_block) if_block.d();
			destroy_component(footer);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let open = false;

	const showNav = function (event) {
		$$invalidate(0, open = event.detail.open);
	};

	return [open, showNav];
}

class Home extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Home;